services:

  match_service:
    container_name: match_service
    build:
      context: .
      dockerfile: Dockerfile
    image: match_service_image
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: preprod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/match_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
    networks:
      - match-service-network

  postgres_db:
    container_name: postgres_db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: match_service
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U banking_user -d banking_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - match-service-network

networks:
  match-service-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local